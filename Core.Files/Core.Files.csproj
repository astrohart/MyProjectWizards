<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="15.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props" Condition="Exists('$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props')" />
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProjectGuid>{C76C6495-9765-4C41-8553-3C1BF2107722}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>Core.Files</RootNamespace>
    <AssemblyName>Core.Files</AssemblyName>
    <TargetFrameworkVersion>v4.8</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <Deterministic>true</Deterministic>
    <NuGetPackageImportStamp></NuGetPackageImportStamp>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>bin\Debug\</OutputPath>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <DocumentationFile>bin\Debug\Core.Files.xml</DocumentationFile>
    <NoWarn>CS1591;CS1587</NoWarn>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <DebugType>pdbonly</DebugType>
    <Optimize>true</Optimize>
    <OutputPath>bin\Release\</OutputPath>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <DocumentationFile>bin\Release\Core.Files.xml</DocumentationFile>
    <NoWarn>CS1591;CS1587</NoWarn>
  </PropertyGroup>
  <PropertyGroup>
    <SignAssembly>true</SignAssembly>
  </PropertyGroup>
  <PropertyGroup>
    <AssemblyOriginatorKeyFile>key.snk</AssemblyOriginatorKeyFile>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="AlphaFS, Version=2.2.0.0, Culture=neutral, PublicKeyToken=4d31a58f7d7ad5c9, processorArchitecture=MSIL">
      <HintPath>..\packages\AlphaFS.2.2.6\lib\net452\AlphaFS.dll</HintPath>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Core" />
    <Reference Include="System.Transactions" />
    <Reference Include="System.Xml.Linq" />
    <Reference Include="System.Data.DataSetExtensions" />
    <Reference Include="Microsoft.CSharp" />
    <Reference Include="System.Data" />
    <Reference Include="System.Net.Http" />
    <Reference Include="System.Xml" />
  </ItemGroup>
  <ItemGroup>
    <Compile Include="DirectoryHelpers.cs" />
    <Compile Include="GetExtraProjectFolderPath.cs" />
    <Compile Include="MakeNewDirectoryInfo.cs" />
    <Compile Include="Properties\AssemblyInfo.cs" />
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
  </ItemGroup>
  <ItemGroup>
    <None Include="key.snk" />
    <None Include="packages.config" />
  </ItemGroup>
  <ItemGroup>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>PublicResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
  </ItemGroup>
  <Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" />
  <PropertyGroup>
    <PreBuildEvent>git config core.longpaths true
SET "_PROJECT_DIR=$(ProjectDir.TrimEnd('\'))"
SET "_SOLUTION_DIR=$(SolutionDir.TrimEnd('\'))"
SET "GENERATED_README_FILE_PATH=$(TargetDir)$(TargetName).md"
SET "PROJECT_README_FILE_PATH=$(ProjectDir)README.md"
ECHO Checking whether the markdown file generated by Vsxmd exists...
IF NOT EXIST "%25GENERATED_README_FILE_PATH%25" GOTO GENERATED_README_FILE_NOT_FOUND
IF EXIST "%25GENERATED_README_FILE_PATH%25" GOTO GENERATED_README_FILE_FOUND
:GENERATED_README_FILE_NOT_FOUND
ECHO Could not locate the file "%25GENERATED_README_FILE_PATH%25".
GOTO AFTER_README
:GENERATED_README_FILE_FOUND
ECHO *** SUCCESS *** Found the markdown file generated by Vsxmd.
ECHO Updating the README.md file for the project...
COPY /Y "%25GENERATED_README_FILE_PATH%25" "%25PROJECT_README_FILE_PATH%25"
ECHO Checking whether the file "%25PROJECT_README_FILE_PATH%25" exists...
IF NOT EXIST "%25PROJECT_README_FILE_PATH%25" GOTO PROJECT_README_FILE_NOT_FOUND
IF EXIST "%25PROJECT_README_FILE_PATH%25" GOTO PROJECT_README_FILE_FOUND
:PROJECT_README_FILE_NOT_FOUND
ECHO Did not find the file "%25PROJECT_README_FILE_PATH%25".  It's supposed to exist.
GOTO AFTER_README
:PROJECT_README_FILE_FOUND
ECHO *** SUCCESS *** The file "%25PROJECT_README_FILE_PATH%25" was found.
ECHO Updating it in source control...
ECHO Checking whether the solution's folder exists...
IF NOT EXIST "%25_SOLUTION_DIR%25" GOTO SOLUTION_DIR_NOT_FOUND
IF EXIST "%25_SOLUTION_DIR%25" GOTO SOLUTION_DIR_FOUND
:SOLUTION_DIR_NOT_FOUND
ECHO The folder that is supposed to contain the solution that contains this project does not exist.
GOTO AFTER_README
:SOLUTION_DIR_FOUND
ECHO *** SUCCESS *** Found the folder that contains this project.
ECHO Changing the current working directory to the project folder...
REM Save the previous working folder, so we can switch back when done.
SET "OLD_CURRENT_WORKING_DIR=%25CD%25"
CD /D "%25_SOLUTION_DIR%25"
ECHO Current working directory is "%25CD%25".
IF "%25CD%25"=="%25_SOLUTION_DIR%25" GOTO UPDATE_GITHUB
IF /I NOT "%25CD%25"=="%25_SOLUTION_DIR%25" GOTO DO_NOT_UPDATE_GITHUB
:DO_NOT_UPDATE_GITHUB
ECHO Failed to change the current working directory to "%25_SOLUTION_DIR%25".
GOTO AFTER_README
:UPDATE_GITHUB
ECHO Attempting to stage the file "%25PROJECT_README_FILE_PATH%25"...
git add -v "%25PROJECT_README_FILE_PATH%25"
ECHO Attempting to commit any existing changes to the local Git repo...
git commit -m "Update README.md"
ECHO Attempting to pull the latest changes from the remote...
git pull -v --no-rebase --all
ECHO Now pushing changes to the remote...
git push -u origin master
ECHO Restoring the previous working directory...
IF EXIST "%25OLD_CURRENT_WORKING_DIR%25" CD /D "%25OLD_CURRENT_WORKING_DIR%25"
ECHO Current working directory is "%25CD%25".
:AFTER_README
ECHO *** DONE *** with pre-build event for project $(ProjectName).
SET ERRORLEVEL=0
</PreBuildEvent>
  </PropertyGroup>
  <PropertyGroup>
    <PostBuildEvent>SET "_TARGET_DIR=$(TargetDir)"
SET "CONFIGURATION_NAME=$(ConfigurationName)"
SET "GENERATED_XML_DOC_FILE_PATH=%25_TARGET_DIR%25$(TargetName).xml"
SET "PROJECT_README_FILE_PATH=$(ProjectDir)README.md"
ECHO Checking whether this is a Release build...
IF "%25CONFIGURATION_NAME%25"=="Release" GOTO ERASE_NONESSENTIAL_RELEASE_BUILD_OUTPUT_FILES
ECHO Not a Release build.  Stopping post-build event at this point.
GOTO FINALIZATION
:ERASE_NONESSENTIAL_RELEASE_BUILD_OUTPUT_FILES
ECHO This is a Release build.  Removing unneeded output files...
ECHO Clearing the output folder of all nonessential files...
IF EXIST "%25_TARGET_DIR%25*.pdb" ERASE /F /S /Q "%25_TARGET_DIR%25*.pdb"
IF EXIST "%25_TARGET_DIR%25*.pspdb" ERASE /F /S /Q "%25_TARGET_DIR%25*.pspdb"
IF EXIST "%25_TARGET_DIR%25*.vshost.exe" ERASE /F /S /Q "%25_TARGET_DIR%25*.vshost.exe"
IF EXIST "%25GENERATED_XML_DOC_FILE_PATH%25" ATTRIB +R "%25GENERATED_XML_DOC_FILE_PATH%25"
IF EXIST "%25PROJECT_README_FILE_PATH%25" ATTRIB +R "%25PROJECT_README_FILE_PATH%25"
IF EXIST "%25_TARGET_DIR%25*.xml" ERASE /F /S /Q "%25_TARGET_DIR%25*.xml"
IF EXIST "%25GENERATED_XML_DOC_FILE_PATH%25" ATTRIB -R "%25GENERATED_XML_DOC_FILE_PATH%25"
IF EXIST "%25PROJECT_README_FILE_PATH%25" ATTRIB -R "%25PROJECT_README_FILE_PATH%25"
GOTO FINALIZATION
:FINALIZATION
ECHO *** DONE *** with post-build script.
SET ERRORLEVEL=0
</PostBuildEvent>
  </PropertyGroup>
  <Import Project="..\packages\Vsxmd.1.4.5\build\Vsxmd.targets" Condition="Exists('..\packages\Vsxmd.1.4.5\build\Vsxmd.targets')" />
  <Target Name="EnsureNuGetPackageBuildImports" BeforeTargets="PrepareForBuild">
    <PropertyGroup>
      <ErrorText>This project references NuGet package(s) that are missing on this computer. Use NuGet Package Restore to download them.  For more information, see http://go.microsoft.com/fwlink/?LinkID=322105. The missing file is {0}.</ErrorText>
    </PropertyGroup>
    <Error Condition="!Exists('..\packages\Vsxmd.1.4.5\build\Vsxmd.targets')" Text="$([System.String]::Format('$(ErrorText)', '..\packages\Vsxmd.1.4.5\build\Vsxmd.targets'))" />
  </Target>
</Project>